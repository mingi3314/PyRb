name: Automated Release Process

on:
  push:
    branches:
      - 12-31-_add_release_workflow

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install toml

      - name: Determine Version Change
        id: version_check
        run: |
          # Function to extract version from pyproject.toml
          function get_current_version() {
            python -c "import toml; print(toml.load('pyproject.toml')['tool']['poetry']['version'])"
          }

          # Function to get the latest release version from GitHub
          function get_latest_release_version() {
            curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                  https://api.github.com/repos/${{ github.repository }}/releases/latest \
            | jq -r '.tag_name'
          }

          VERSION=$(get_current_version)
          echo "Current version: $VERSION"

          LATEST_RELEASE=$(get_latest_release_version)
          echo "Latest release version: $LATEST_RELEASE"

          if [ "$VERSION" != "$LATEST_RELEASE" ]; then
            echo "Version has changed."
            echo "version_changed=true" >> $GITHUB_ENV
            echo ::set-output name=version_changed::true
            echo ::set-output name=new_version::$VERSION
          else
            echo "No version change detected."
            echo "version_changed=false" >> $GITHUB_ENV
            echo ::set-output name=version_changed::false
          fi

      - name: Create Release
        if: steps.version_check.outputs.version_changed == 'true'
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
