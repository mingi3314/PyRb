name: Build Backend Executable

on:
  workflow_call:
    inputs:
      platform:
        description: "Target platform for the build"
        required: true
        type: string

jobs:
  build-backend-linux:
    runs-on: ubuntu-latest
    if: ${{ inputs.platform == 'linux' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Build executable in Docker
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace \
            ubuntu:18.04 /bin/bash -c "\
              apt-get update && \
              apt-get install -y python3.11 python3.11-venv python3.11-dev && \
              curl -sS https://bootstrap.pypa.io/get-pip.py | python3.11 && \
              pip3.11 install pyinstaller && \
              pyinstaller -c -F --clean --name run-server-x86_64-unknown-linux-gnu backend/pyrb/controllers/api/main.py && \
              cp backend/dist/run-server-x86_64-unknown-linux-gnu frontend/src-tauri/bin/"

  build-backend-macos:
    runs-on: macos-12
    if: ${{ inputs.platform == 'macos' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build backend executable
        run: |
          pyinstaller -c -F --clean --name run-server-aarch64-apple-darwin backend/pyrb/controllers/api/main.py
          cp backend/dist/run-server-aarch64-apple-darwin frontend/src-tauri/bin/

  build-backend-windows:
    runs-on: windows-2019
    if: ${{ inputs.platform == 'windows' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build backend executable
        run: |
          pyinstaller -c -F --clean --name run-server-x86_64-pc-windows-msvc backend/pyrb/controllers/api/main.py
          cp backend/dist/run-server-x86_64-pc-windows-msvc.exe frontend/src-tauri/bin/
