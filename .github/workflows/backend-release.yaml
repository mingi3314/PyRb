name: Automated Backend Release Process

on:
  push:
    branches:
      - main
    paths:
      - "backend/**"

jobs:
  create-release-and-publish:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3.11 -

      - name: Install dependencies with Poetry
        run: |
          poetry install

      - name: Determine Version Change
        id: version_check
        run: |
          VERSION="backend@v$(poetry version -s)"
          echo "Current version: $VERSION"

          LATEST_RELEASE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases?per_page=5" | \
            jq -r '.[] | select(.tag_name | startswith("backend@")).tag_name' | head -n 1)
          echo "Latest release version: $LATEST_RELEASE"

          if [ "$VERSION" != "$LATEST_RELEASE" ]; then
            echo "Version has changed."
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "new_version=$VERSION" >> $GITHUB_OUTPUT
          else
            echo "No version change detected."
            echo "version_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Call Reusable Workflow to Build Backend for Linux
        uses: mingi3314/PyRb/.github/workflows/build-backend-executable.yaml@main
        with:
          platform: linux

      - name: Call Reusable Workflow to Build Backend for macOS
        uses: mingi3314/PyRb/.github/workflows/build-backend-executable.yaml@main
        with:
          platform: macos

      - name: Call Reusable Workflow to Build Backend for Windows
        uses: mingi3314/PyRb/.github/workflows/build-backend-executable.yaml@main
        with:
          platform: windows

      - name: Create Release
        if: steps.version_check.outputs.version_changed == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version_check.outputs.new_version }}
          generate_release_notes: True

      - name: Configure Poetry for PyPI
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_API_TOKEN }}

      - name: Build and publish to PyPI
        if: steps.version_check.outputs.version_changed == 'true'
        run: |
          poetry build
          poetry publish
